services:
  # PostgreSQLデータベース
  postgres:
    image: postgres:18-alpine
    container_name: incident-bot-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: incident_bot
      TZ: Asia/Tokyo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - incident-bot-network

  # Slackボット
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: incident-bot
    environment:
      # Slack設定（環境変数で上書き可能）
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN:-}
      SLACK_APP_TOKEN: ${SLACK_APP_TOKEN:-}
      # データベース接続設定
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: incident_bot
      TZ: Asia/Tokyo
    volumes:
      # ローカルのconfig.tomlをマウント（存在する場合）
      - ./config.toml:/root/config.toml:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - incident-bot-network

volumes:
  postgres_data:
    driver: local

networks:
  incident-bot-network:
    driver: bridge
